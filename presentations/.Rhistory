library(meffil)
?meffil.ewas
?meffil.ewas.summary
716/60
142/60
1810/60
2787/60
801/60
210/60
2396/60
6.4*8
sfiles <- list.files(path=system.file("files/structure",package="pophelper"), full.names=T)
slist <- readQ(files=sfiles)
library(pophelper)
sfiles <- list.files(path=system.file("files/structure",package="pophelper"), full.names=T)
slist <- readQ(files=sfiles)
threelabset <- read.delim(system.file("files/metadata.txt", package="pophelper"), header=T,stringsAsFactors=F)
tmp <- plotQ(slist[1],threelabset[,1,drop=F],returnplot=T,exportplot=F)
slist[1]
tmp <- plotQ(slist[1],threelabset[,1,drop=F],returnplot=T,exportplot=F)
tmp <- plotQ(slist[1],grplab=threelabset[,1,drop=F],returnplot=T,exportplot=F)
tmp
plot(tmp$plot)
plot(tmp$plot[[1]])
readxl::read_xlsx
dfr <- readxl::read_xlsx("./data/processed/cell-kw-2.xlsx")
table(dfr$field)
rm(dfr)
setwd("~/SynologyDrive/documents/nbis/teaching/2019/rnaseq-uppsala-1905/presentations")
# load the packages you need
library(dplyr)
library(tidyr)
#library(stringr)
library(ggplot2)
library(pheatmap)
library(DESeq2)
library(edgeR)
cr <- read.table("./data/count_raw.txt",header=TRUE)
cr[1:6,1:6]
mr <- read.csv2("./data/metadata_raw.csv",header=TRUE,stringsAsFactors=F)
rownames(mr) <- mr$Sample_ID
mr[1:6,]
cf1 <- cr[rowSums(cr>0) >= round(0.20*ncol(cr)), ]
cf2 <- cr[rowSums(cr>5) >= round(0.20*ncol(cr)), ]
cf3 <- cr[rowSums(edgeR::cpm(cr)>1) >= round(0.2*ncol(cr)), ]
h0 <- cr %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
ggplot(aes(x=log10(value+1),group=sample))+
geom_density()+
labs(x=expression('Log'[10]~'Read counts'),y="Density",title="Raw")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank())
h1 <- cf1 %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
ggplot(aes(x=log10(value+1),group=sample))+
geom_density()+
labs(x=expression('Log'[10]~'Read counts'),y="Density",title="Method 1")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank())
h2 <- cf2 %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
ggplot(aes(x=log10(value+1),group=sample))+
geom_density()+
labs(x=expression('Log'[10]~'Read counts'),y="Density",title="Method 2")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank())
h3 <- cf3 %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
ggplot(aes(x=log10(value+1),group=sample))+
geom_density()+
labs(x=expression('Log'[10]~'Read counts'),y="Density",title="Method 3")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank())
ggpubr::ggarrange(h0,h1,h2,h3,nrow=1,ncol=4)
cat(paste0("Raw: ",nrow(cr),", Method 1: ",nrow(cf1),", Method 2: ",nrow(cf2),", Method 3: ",nrow(cf3)))
cf <- cf3
rm(cf1,cf2,cf3)
tpm <- function(counts,len) {
x <- counts/len
return(t(t(x)*1e6/colSums(x)))
}
#tpm
g <- read.delim("./data/human_genes.txt",header=T,stringsAsFactors=F)
g <- g[!duplicated(g$ensembl_gene_id),]
g$len <- g$end_position-g$start_position
rownames(g) <- g$ensembl_gene_id
igenes <- intersect(rownames(cf),g$ensembl_gene_id)
g1 <- g[igenes,]
cf1 <- cf[igenes,]
ct <- tpm(cf1,g1$len)
# deseq2
mr$Time <- factor(mr$Time)
d <- DESeqDataSetFromMatrix(countData=cf,colData=mr,design=~Time)
d <- DESeq2::estimateSizeFactors(d,type="ratio")
cd <- counts(d,normalized=TRUE)
# vst
mr$Time <- factor(mr$Time)
d <- DESeqDataSetFromMatrix(countData=cf,colData=mr,design=~Time)
d <- DESeq2::estimateSizeFactors(d,type="ratio")
d <- DESeq2::estimateDispersions(d)
cv <- as.data.frame(assay(varianceStabilizingTransformation(d,blind=T)),check.names=F)
h0 <- cf %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
ggplot(aes(x=log10(value+1),group=sample))+
geom_density()+
labs(x=expression('Log'[10]~'Read counts'),y="Density",title="Non-normalised")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank())
h1 <- as.data.frame(ct) %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
ggplot(aes(x=log10(value+1),group=sample))+
geom_density()+
labs(x=expression('Log'[10]~'Read counts'),y="Density",title="TPM")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank())
h2 <- as.data.frame(cd) %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
ggplot(aes(x=log10(value+1),group=sample))+
geom_density()+
labs(x=expression('Log'[10]~'Read counts'),y="Density",title="DESeq2")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank())
h3 <- cv %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
ggplot(aes(x=log10(value+1),group=sample))+
geom_density()+
labs(x=expression('Log'[10]~'Read counts'),y="Density",title="VST")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank())
h4 <- as.data.frame(edgeR::cpm(cf)) %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
ggplot(aes(x=log10(value+1),group=sample))+
geom_density()+
labs(x=expression('Log'[10]~'Read counts'),y="Density",title="CPM")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank())
ggpubr::ggarrange(h0,h1,h4,h2,h3,nrow=1,ncol=5)
h0 <- cf %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
group_by(gene) %>% summarise(mean=mean(value),var=var(value)) %>%
ggplot(aes(x=log10(mean+1),y=log10(var+1)))+
geom_point()+
labs(x=expression('Log'[10]~'mean'),y=expression('Log'[10]~'variance'),title="Non-normalised")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x = element_blank())
h1 <- as.data.frame(ct) %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
group_by(gene) %>% summarise(mean=mean(value),var=var(value)) %>%
ggplot(aes(x=log10(mean+1),y=log10(var+1)))+
geom_point()+
labs(x=expression('Log'[10]~'mean'),y=expression('Log'[10]~'variance'),title="TPM")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x = element_blank())
h2 <- as.data.frame(cd) %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene)%>%
group_by(gene) %>% summarise(mean=mean(value),var=var(value)) %>%
ggplot(aes(x=log10(mean+1),y=log10(var+1)))+
geom_point()+
labs(x=expression('Log'[10]~'mean'),y=expression('Log'[10]~'variance'),title="DESeq2")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x = element_blank())
h3 <- cv %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
group_by(gene) %>% summarise(mean=mean(value),var=var(value)) %>%
ggplot(aes(x=log10(mean+1),y=log10(var+1)))+
geom_point()+
labs(x=expression('Log'[10]~'mean'),y=expression('Log'[10]~'variance'),title="VST")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x = element_blank())
h4 <- as.data.frame(edgeR::cpm(cf)) %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
group_by(gene) %>% summarise(mean=mean(value),var=var(value)) %>%
ggplot(aes(x=log10(mean+1),y=log10(var+1)))+
geom_point()+
labs(x=expression('Log'[10]~'mean'),y=expression('Log'[10]~'variance'),title="CPM")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x = element_blank())
ggpubr::ggarrange(h0,h1,h4,h2,h3,nrow=1,ncol=5)
dmat <- as.matrix(cor(cv,method="spearman"))
pheatmap::pheatmap(dmat,border_color=NA,annotation_col=mr[,"Time",drop=F],
annotation_row=mr[,"Time",drop=F],annotation_legend=T)
dmat <- as.matrix(dist(t(cv)))
pheatmap(dmat,border_color=NA,annotation_col=mr[,"Time",drop=F],
annotation_row=mr[,"Time",drop=F],annotation_legend=T)
pcaobj <- prcomp(x=t(cv))
{par(mar=c(4,4,0.5,0))
barplot(round(pcaobj$sdev^2/sum(pcaobj$sdev^2)*100,2),las=2,
names.arg=colnames(pcaobj$x),ylab="% Variance explained",
xlab="PCA principal components")}
pcamat1 <- as.data.frame(pcaobj$x)
pcamat2 <- merge(pcamat1,mr,by=0)
ggplot(pcamat2,aes(PC1,PC2,colour=Time))+
geom_point()+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank())
library(DESeq2)
mr$Time <- factor(mr$Time)
d <- DESeqDataSetFromMatrix(countData=cf,colData=mr,design=~Time)
d <- DESeq2::estimateSizeFactors(d,type="ratio")
d
sizeFactors(d)
dm <- apply(cd,1,mean)
dv <- apply(cd,1,var)
cva <- function(x) sd(x)/mean(x)
dc <- apply(cd,1,cva)
h1 <- ggplot(data.frame(mean=log10(dm+1),var=log10(dv+1)),
aes(mean,var))+
geom_point(alpha=0.2)+
geom_smooth(method="lm")+
labs(x=expression('Log'[10]~'Mean counts'),y=expression('Log'[10]~'Variance'))+
theme_bw()
h2 <- ggplot(data.frame(mean=log10(dm+1),var=dc),
aes(mean,var))+
geom_point(alpha=0.2)+
geom_smooth(method="lm")+
labs(x=expression('Log'[10]~'Mean counts'),y="Coefficient of variation")+
theme_bw()
ggpubr::ggarrange(h1,h2,nrow=1,ncol=2)
d <- DESeq2::estimateDispersions(d)
{par(mar=c(4,4,1,1))
plotDispEsts(d)}
par(mar=c(1,1,1,1))
stop()
h0 <- cf %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
group_by(gene) %>% summarise(mean=mean(value),var=var(value)) %>%
ggplot(aes(x=log10(mean+1),y=log10(var+1)))+
geom_point(alpha=0.5)+
labs(x=expression('Log'[10]~'mean'),y=expression('Log'[10]~'variance'),title="Non-normalised")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x = element_blank())
h1 <- as.data.frame(ct) %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
group_by(gene) %>% summarise(mean=mean(value),var=var(value)) %>%
ggplot(aes(x=log10(mean+1),y=log10(var+1)))+
geom_point(alpha=0.5)+
labs(x=expression('Log'[10]~'mean'),y=expression('Log'[10]~'variance'),title="TPM")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x = element_blank())
h2 <- as.data.frame(cd) %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene)%>%
group_by(gene) %>% summarise(mean=mean(value),var=var(value)) %>%
ggplot(aes(x=log10(mean+1),y=log10(var+1)))+
geom_point(alpha=0.5)+
labs(x=expression('Log'[10]~'mean'),y=expression('Log'[10]~'variance'),title="DESeq2")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x = element_blank())
h3 <- cv %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
group_by(gene) %>% summarise(mean=mean(value),var=var(value)) %>%
ggplot(aes(x=log10(mean+1),y=log10(var+1)))+
geom_point(alpha=0.5)+
labs(x=expression('Log'[10]~'mean'),y=expression('Log'[10]~'variance'),title="VST")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x = element_blank())
h4 <- as.data.frame(edgeR::cpm(cf)) %>%
mutate(gene=rownames(.)) %>%
gather(key="sample",value="value",-gene) %>%
group_by(gene) %>% summarise(mean=mean(value),var=var(value)) %>%
ggplot(aes(x=log10(mean+1),y=log10(var+1)))+
geom_point(alpha=0.5)+
labs(x=expression('Log'[10]~'mean'),y=expression('Log'[10]~'variance'),title="CPM")+
theme_bw()+
theme(panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x = element_blank())
ggpubr::ggarrange(h0,h1,h4,h2,h3,nrow=1,ncol=5)
dg <- nbinomWaldTest(d)
resultsNames(dg)
?resultsNames
res1 <- results(dg,name="Time_t2_vs_t0",alpha=0.05)
summary(res1)
?results
results(dg,contrast=c("Time","t2","t0"),alpha=0.05)
?lfcShrink
lres1 <- lfcShrink(dg,coef="Time_t2_vs_t0",res=res1)
head(lres1)
summary(res1)
summary(lres1)
hist(res1$log2FoldChange)
plot(density(res1$log2FoldChange))
plot(density(res1$padj))
plot(density(na.omit(res1$padj)))
par(mfrow=c(2,2))
plot(density(na.omit(res1$log2FoldChange)))
plot(density(na.omit(res1$padj)))
par(mfrow=c(1,1))
par(mfrow=c(1,2))
plot(density(na.omit(res1$log2FoldChange)),main="log2FoldChange")
plot(density(na.omit(res1$padj)),main="BH adj pval")
par(mfrow=c(1,1))
par(mfrow=c(1,2))
plot(density(na.omit(lres1$log2FoldChange)),main="log2FoldChange")
plot(density(na.omit(lres1$padj)),main="BH adj pval")
par(mfrow=c(1,1))
head(lres1)
plot(res1$log2FoldChange,lres1$log2FoldChange)
data.frame(lfc=res1$log2FoldChange,slfc=lres1$log2FoldChange,diff=abs(res1$log2FoldChange-lres1$log2FoldChange)) %>%
ggplot(.,aes(lfc,slfc,color=diff))+
geom_point()
data.frame(lfc=res1$log2FoldChange,slfc=lres1$log2FoldChange,diff=abs(res1$log2FoldChange-lres1$log2FoldChange)) %>%
ggplot(.,aes(lfc,slfc,color=diff))+
geom_point()
all.equal(rownames(res1),rownames(lres1))
# check rownames are same
all.equal(rownames(res1),rownames(lres1))
dfr <- data.frame(gene=rownames(res1),lfc=res1$log2FoldChange,slfc=lres1$log2FoldChange,diff=abs(res1$log2FoldChange-lres1$log2FoldChange))
ggplot(dfr,aes(lfc,slfc,color=diff))+
geom_point()
filter(dfr,diff>3)
plotCounts(d,gene="ENSG00000095370",intgroup="Time",normalized=F)
4.8/0.5
plotCounts(d,gene="ENSG00000095370",intgroup="Time",normalized=T)
4.8/0.5
log2(9.6)
